<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>CommandReader.CommandReaders Method</title><meta name="Title" content="CommandReaders" /><meta name="Help.Id" content="M:ASE_Canvas_2.File_Handler.CommandReader.CommandReaders" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="ASE_Canvas_2.File_Handler" /><meta name="guid" content="e9f8c497-efcf-c43e-f0fe-9d51b05d5f69" /><meta name="Description" content="Opens a file dialog to allow the user to select a text file and reads its content." /><meta name="tocFile" content="../toc/IDBCG.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">A Sandcastle Documented Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Command<wbr />Reader<span id="LST405B8055_0" data-languageSpecificText="cpp=::|nu=."></span>Command<wbr />Readers Method</h1><div class="summary">
            Opens a file dialog to allow the user to select a text file and reads its content.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="b9286c8b-2cc7-255a-334b-969fd73d0d1d.htm">ASE_Canvas_2.File_Handler</a><br /><strong>Assembly:</strong> ASE_Canvas_2 (in ASE_Canvas_2.exe) Version: 1.0.0+aedf0fd20fc3d13e28395322df5222c74669e748<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="identifier">string</span> <span class="identifier">CommandReaders</span>()</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">CommandReaders</span> <span class="keyword">As</span> <span class="identifier">String</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="identifier">String</span>^ <span class="identifier">CommandReaders</span>()</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">member</span> <span class="identifier">CommandReaders</span> : <span class="keyword">unit</span> <span class="keyword">-&gt;</span> <span class="identifier">string</span> </code></pre></div></div><h4>Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a><br />
            A string containing the content of the selected file, or an empty string if the operation fails or is canceled.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDCCSection">
            The method displays an <a href="https://learn.microsoft.com/dotnet/api/system.windows.forms.openfiledialog" target="_blank" rel="noopener noreferrer">OpenFileDialog</a> configured to filter for text files (*.txt).
            If a file is selected, its content is read and returned. In case of an error, an error message is displayed
            to the user using <a href="https://learn.microsoft.com/dotnet/api/system.windows.forms.messagebox" target="_blank" rel="noopener noreferrer">MessageBox</a>, and an empty string is returned.
            <ul><li>If the user selects a valid file, the content of the file is read and returned.</li><li>If the user cancels the dialog, an empty string is returned.</li><li>If an error occurs during file reading, an error message is shown and an empty string is returned.</li></ul><p>
            The method supports reading plain text files and ensures that file reading errors are handled gracefully.
            </p><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDHCCSection">
            The following example demonstrates how to use the <span class="selflink">CommandReaders<span id="LST405B8055_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span> method:
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">CommandReader reader = new CommandReader();
string commands = reader.CommandReaders();
if (!string.IsNullOrEmpty(commands))
{
    // Successfully loaded commands
    Console.WriteLine(commands);
}
else
{
    // No commands loaded
    Console.WriteLine("No commands were loaded.");
}</code></pre></div></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDDCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.unauthorizedaccessexception" target="_blank" rel="noopener noreferrer">UnauthorizedAccessException</a></td><td>
            Thrown internally if the file cannot be accessed due to permission issues.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.io.ioexception" target="_blank" rel="noopener noreferrer">IOException</a></td><td>
            Thrown internally if there is an issue with the file system during reading.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noopener noreferrer">Exception</a></td><td>
            Thrown internally for other unexpected errors during file reading.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="93a008e7-25f7-bd43-ff54-a4021ab2f23c.htm">CommandReader Class</a></div><div><a href="b9286c8b-2cc7-255a-334b-969fd73d0d1d.htm">ASE_Canvas_2.File_Handler Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>